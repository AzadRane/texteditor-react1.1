{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","placeholder","onClick","toggle","htmlFor","TextForm","useState","text","setText","style","color","heading","value","rows","onChange","event","console","log","target","newtxt","toUpperCase","showalert","newTxt","toLocaleLowerCase","split","length","Alert","alert","role","word","lower","toLowerCase","charAt","slice","cap","msg","App","setMode","setAlert","showAlert","message","setTimeout","about","document","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5426c265.chunk.js","sourcesContent":["import React from 'react'\r\n// import { a } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n \r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} >\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-a active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <a className=\"nav-a\" href=\"/about\">{props.about}</a> */}\r\n        </li>\r\n       \r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} `}>\r\n  <input className=\"form-check-input mx-1\" type=\"checkbox\" onClick={props.toggle} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n","import React , {useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text , setText] = useState('');\r\n\r\n    const handleUpclick= ()=>{\r\n        console.log('upprer')\r\n        let newtxt = text.toUpperCase();\r\n        setText(newtxt)\r\n        props.showalert(\"CONVERTED TO UPPER\",\"success\");\r\n    } \r\n    \r\n    const handleOnchanged = (event)=>{\r\n        console.log('onchanged')\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleLowclick = ()=>{\r\n        console.log('lovereed');\r\n        let newTxt = text.toLocaleLowerCase();\r\n        setText(newTxt);\r\n        props.showalert(\"CONVERTED TO LOWER\",\"success\");\r\n\r\n    }\r\n\r\n    const handleClear = () =>{\r\n        console.log('clear');\r\n        setText('');\r\n        props.showalert(\"CLEARED\",\"success\");\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#001133'}}>\r\n            <h1>{props.heading}</h1>\r\n\r\n            <div className=\"mb-3\">\r\n                \r\n                <textarea className=\"form-control\" value={text} id=\"mytext\" rows=\"8\" onChange={handleOnchanged}></textarea>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-primary mx-1\" onClick={handleUpclick} >Uppercase</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-1\" onClick={handleLowclick} >Lowercase</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-1\" onClick={handleClear} >Clear</button>\r\n            <div className=\"container my-3\">\r\n            <h2>YOUR SUMMARY</h2>\r\n            <p>{text.split(\" \").length} Words ands {text.length} charrecters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n            <h3>Preview</h3>\r\n            <p>{text}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const cap =(word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{cap(props.alert.type)}!</strong><strong>{props.alert.msg}</strong> \r\n      </div>\r\n    )\r\n}\r\n","\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n\n// import {\n  // BrowserRouter as Router,\n  // Switch,\n  // Route,\n  \n// } from \"react-router-dom\"\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n const [alert, setAlert] = useState(null);\n\n  const toggleMode=()=>{\n    if(mode==='light')\n    {\n      setMode('dark')\n      document.body.style.backgroundColor = '#001133';\n      showAlert(\"Dark mode has been enebaled\",\"success\")\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enebaled\",\"success\")\n    }\n  }\n\n  const  showAlert= (message , type) =>{\n    setAlert({\n      msg : message,\n      type : type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n\n  }\n  return (\n   <>\n  {/* <Router> */}\n   <Navbar title=\"TEXTEDITOR\" about=\"ABOUT\" mode={mode} toggle={toggleMode}/>\n <Alert alert={alert}></Alert>\n <div className=\"container my-3\">\n   {/* <Switch> */}\n     {/* <Route exact path=\"/about\"><About/></Route> */}\n      {/* <Route exact path=\"/\"> */}\n     <TextForm showalert={showAlert} heading=\"Enter the text to analysie\" mode={mode}/>\n     {/* </Route> */}\n     {/* </Switch> */}\n {/* <About/> */}\n   </div>\n    {/* </Router> */}\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}